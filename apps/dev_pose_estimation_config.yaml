# AI Multi-Person Pose Estimation System Configuration File
# This file contains configuration parameters for all services, can be modified as needed

# Global configuration
global:
  # Computing device: cuda or cpu
  devices: [ "cuda:0" ]   # ["cuda:0", "cuda:1"] for multi-GPU
  # Log level: DEBUG, INFO, WARN, ERROR
  log_level: "INFO"
  # Startup delay between services (seconds)
  startup_delay: 5
  # Number of worker processes per device
  num_workers_per_device: 1
  # Inference backend: onnxruntime, openvino, tensorrt
  backend: "onnxruntime"



# Kafka message queue configuration (replaces MQTT)
kafka:
  # Kafka server address (Docker services use internal network)
  bootstrap_servers: "localhost:9092"
  # Topic configuration templates (use {task_id} placeholder)
  topics:
    raw_frames: "raw_frames_{task_id}"
    yolox_output: "yolox_detections_{task_id}"
    rtmpose_output: "rtmpose_results_{task_id}"
    bytetrack_output: "bytetrack_tracking_{task_id}"
  # Consumer group configuration
  consumer_groups:
    yolox_service: "yolox_consumers_{task_id}"
    rtmpose_service: "rtmpose_consumers_{task_id}"
    bytetrack_service: "bytetrack_consumers_{task_id}"
    annotation_service: "annotation_consumers_{task_id}"
  # Kafka producer/consumer settings
  producer:
    acks: "all"
    retries: 3
    batch_size: 16384
    linger_ms: 10
    compression_type: "gzip"
  consumer:
    auto_offset_reset: "earliest"
    max_poll_records: 1
    consumer_timeout_ms: 1000
    enable_auto_commit: true
  # Queue length limits
  queue_limits:
    yolox_output: 50
    rtmpose_input: 100
    rtmpose_output: 100
    bytetrack_input: 100
    bytetrack_output: 100
    annotation_input1: 100
    annotation_input2: 100

# YOLOX object detection service configuration
yolox:
  enabled: true
  # Model input size [width, height]
  model_input_size: [ 640, 640 ]
  # Model URL (will be downloaded automatically)
  onnx_model: "https://download.openmmlab.com/mmpose/v1/projects/rtmposev1/onnx_sdk/yolox_m_8xb8-300e_humanart-c2c7a14a.zip"
  # Device configuration
  devices: [ "cuda:0" ]
  backend: "onnxruntime"
  # Model configuration
  model:
    confidence_threshold: 0.5
    nms_threshold: 0.45
  # Input configuration - now using Kafka instead of RTSP
  input:
    type: "kafka"
    config: "kafka://localhost:9092,topic=raw_frames_{task_id},group_id=yolox_consumers_{task_id}"
  # Output configuration - using Kafka instead of MQTT
  output:
    type: "kafka"
    config: "kafka://localhost:9092,topic=yolox_detections_{task_id},acks=all,compression_type=gzip"

# RTMPose pose estimation service configuration
rtmpose:
  enabled: true
  # Model input size [width, height]
  model_input_size: [ 192, 256 ]
  # Model URL
  onnx_model: "https://download.openmmlab.com/mmpose/v1/projects/rtmposev1/onnx_sdk/rtmpose-m_simcc-body7_pt-body7_420e-256x192-e48f03d0_20230504.zip"
  # Device configuration
  devices: [ "cuda:0" ]
  backend: "onnxruntime"
  # Input configuration (multi-input) - now using Kafka
  input:
    raw_frames:
      type: "kafka"
      config: "kafka://localhost:9092,topic=raw_frames_{task_id},group_id=rtmpose_raw_{task_id}"
    detections:
      type: "kafka"
      config: "kafka://localhost:9092,topic=yolox_detections_{task_id},group_id=rtmpose_det_{task_id}"
  # Output configuration - using Kafka
  output:
    type: "kafka"
    config: "kafka://localhost:9092,topic=rtmpose_results_{task_id},acks=all,compression_type=gzip"

# BoTSORT object tracking service configuration
bytetrack:
  enabled: true
  # BoTSORT specific parameters
  reid_weights: "osnet_x0_25_msmt17.pt"  # ReID model weights path
  half: true  # Use half precision
  track_high_thresh: 0.3  # Lowered from 0.6 for better detection
  track_low_thresh: 0.1
  new_track_thresh: 0.4  # Lowered from 0.7 for easier track creation
  track_buffer: 30
  match_thresh: 0.8
  cmc_method: "ecc"  # Camera motion compensation method
  # Legacy ByteTrack parameters (for backward compatibility)
  track_thresh: 0.45
  frame_rate: 25
  per_class: false
  # Device configuration
  devices: "cuda:0"  # Changed to GPU for BoTSORT performance
  # Input configuration - multi-input for raw frames and detections
  input:
    raw_frames:
      type: "kafka"
      config: "kafka://localhost:9092,topic=raw_frames_{task_id},group_id=bytetrack_raw_{task_id}"
    detections:
      type: "kafka"
      config: "kafka://localhost:9092,topic=yolox_detections_{task_id},group_id=bytetrack_consumers_{task_id}"
  # Output configuration - using Kafka
  output:
    type: "kafka"
    config: "kafka://localhost:9092,topic=bytetrack_tracking_{task_id},acks=all,compression_type=gzip"

# Annotation visualization service configuration
annotation:
  enabled: true
  # Device configuration
  devices: "cpu"
  # Debug output directory for saving debug frames
  debug_output_dir: "debug_frames"
  # Frame synchronization timeout (seconds) - how long to wait for all inputs
  frame_timeout_sec: 20
  # Input configuration (multi-input) - mixed Kafka and RTSP
  input:
    consumer:
      auto_offset_reset: "earliest"
      max_poll_records: 1
      consumer_timeout_ms: 1000
      enable_auto_commit: true
    raw_frames:
      type: "kafka"
      config: "kafka://localhost:9092,topic=raw_frames_{task_id},group_id=annotation_raw_{task_id}"
    yolox_detections:
      type: "kafka"
      config: "kafka://localhost:9092,topic=yolox_detections_{task_id},group_id=annotation_det_{task_id}"
    poses:
      type: "kafka"
      config: "kafka://localhost:9092,topic=rtmpose_results_{task_id},group_id=annotation_pose_{task_id}"
    bytetrack_tracking:
      type: "kafka"
      config: "kafka://localhost:9092,topic=bytetrack_tracking_{task_id},group_id=annotation_track_{task_id}"
  # Output configuration - multiple outputs supported
  outputs:
    - type: "rtsp"
      config: "rtsp://localhost:8554,topic=outstream_{task_id},width=1280,height=720,fps=25"
      fps: 25  # 注意：应该与输入视频fps匹配以避免时长变化
      bitrate: "4000k"
      width: 1280
      height: 720
      preset: "veryfast"
      codec: "libx264"
      pixel_format: "yuv420p"
    - type: "mongodb"
      mongo_uri: "mongodb://admin:password@localhost:27017/pose_annotations?authSource=admin"
      database: "pose_annotations"
      collection: "tracked_results"
      batch_size: 10
      batch_timeout: 5.0
  # Video file output configuration (using FFmpeg)
  video_output:
    enabled: true
    output_dir: "output_videos"
    filename_template: "annotated_{task_id}.mp4"
    # Video encoding parameters
    width: 1920
    height: 1080
    fps: 25  # 重要：应该与输入视频fps一致，否则会导致时长变化
    codec: "mp4v"  # Use libx264 for better compatibility
    preset: "fast"     # FFmpeg preset: ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow
    crf: 23           # Constant Rate Factor: 0-51 (lower = better quality, 23 is good balance)
    bitrate: "4000k"  # Target bitrate
    pixel_format: "yuv420p"  # Standard pixel format for MP4
    queue_max_len: 100  # Maximum frames in output queue

# Service dependencies (startup order)
service_dependencies:
  - name: "yolox"
    depends_on: [ ]
    description: "Object detection service, detects human bounding boxes from Kafka raw frames"
  - name: "rtmpose"
    depends_on: [ "yolox" ]
    description: "Pose estimation service, receives detection results for pose estimation"
  - name: "bytetrack"
    depends_on: [ "yolox" ]
    description: "Object tracking service, tracks detected objects"
  - name: "annotation"
    depends_on: [ "rtmpose", "bytetrack" ]
    description: "Visualization service, aggregates all results and outputs"

# Monitoring configuration
monitoring:
  # Monitoring interval (seconds)
  interval: 10
  # Monitoring metrics
  metrics:
    - queue_sizes
    - processing_rates
    - memory_usage
    - gpu_usage
    - kafka_lag
  # Alert thresholds
  alerts:
    queue_size_threshold: 1000
    memory_usage_threshold: 0.8
    gpu_memory_threshold: 0.9
    kafka_lag_threshold: 1000

# Logging configuration
logging:
  # Log file configuration
  file:
    enabled: true
    path: "logs"
    filename_pattern: "pose_estimation_{timestamp}.log"
    max_size: "100MB"
    backup_count: 10
  # Console output
  console:
    enabled: true
    format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
  # Service-specific logging
  services:
    yolox:
      level: "INFO"
    rtmpose:
      level: "INFO"
    bytetrack:
      level: "INFO"
    annotation:
      level: "INFO" 